#-------------------------------------------------------------------------------
# $Id$
#
# Project: EOxServer <http://eoxserver.org>
# Authors: Stephan Krause <stephan.krause@eox.at>
#          Stephan Meissl <stephan.meissl@eox.at>
#
#-------------------------------------------------------------------------------
# Copyright (C) 2011 EOX IT Services GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies of this Software or works derived from this Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------

##################
# Autotest HowTo #
##################

---------------------------------
1. How to configure test instance
---------------------------------

cd <path_to_eoxserver_directory>
svn co http://eoxserver.org/svn/trunk . # Note that the directories should not be moved or renamed because of relative paths.
cd autotest
cp data/meris/TEMPLATE_template.map conf/template.map
cp ../eoxserver/conf/TEMPLATE_eoxserver.conf conf/eoxserver.conf
cp ../eoxserver/conf/TEMPLATE_config.sqlite data/config.sqlite
cp ../eoxserver/conf/TEMPLATE_settings.py settings.py
cp ../eoxserver/conf/init_spatialite-2.3.sql data/

vi conf/eoxserver.conf
#--------
# Adjust:
#--------
# instance_id=
# logging_filename=<path_to_eoxserver_directory>/autotest/logs/eoxserver.log
# module_dirs=
# allowed_actions=Add,Delete
# path_wcst_temp=<path_to_eoxserver_directory>/autotest/wcst_remp 
# path_wcst_perm=<path_to_eoxserver_directory>/autotest/wcst_perm 

vi settings.py
#--------
# Adjust:
#--------
# PROJECT_DIR = '<path_to_eoxserver_directory>/autotest'
# DATABASES -> 'NAME': '<path_to_eoxserver_directory>/autotest/data/config.sqlite',
# MEDIA_ROOT = join('../eoxserver/', 'media')
# TEMPLATE_DIRS -> join('../eoxserver/', 'templates'),
# FIXTURE_DIRS -> join(PROJECT_DIR, 'data/fixtures'),

# Obtain manage.py from installed version of django:
django-admin.py startproject tmp
cp tmp/manage.py .
rm -r tmp/

export PYTHONPATH="<path_to_eoxserver_directory>"
python manage.py syncdb


------------------------
2. How to load test data
------------------------

cd <path_to_eoxserver_directory>/autotest
export PYTHONPATH="<path_to_eoxserver_directory>"
python manage.py loaddata data/fixtures/some_fixture.json ...

# To load all test fixtures:
python manage.py loaddata auth_data.json initial_rangetypes.json testing_base.json testing_coverages.json testing_asar_base.json testing_asar.json 

List of fixtures:
 * initial_data.json - Base data to enable components. Loaded with syncdb.
 * auth_data.json - An administration account.
 * initial_rangetypes.json - Range types for RGB and gray-scale coverages.
 * testing_base.json - Range type for the 15 band uint16 test data.
 * testing_coverages.json - Metadata for the MERIS test data.
 * testing_asar_base.json - Range type for the ASAR test data.
 * testing_asar.json - Metadata for the ASAR test data.
 * testing_rasdaman_coverages.json - Use this fixtures in addition when
                                     rasdaman is installed and configured.
 * testing_backends.json - This fixtures are used for testing the backend
                           layer only and shouldn't be loaded in the test
                           instance.


---------------------------
3. How to run test instance
---------------------------

# Perform steps in "1. How to configure test instance"
# Optionally perform steps in "2. How to load test data"
cd <path_to_eoxserver_directory>/autotest
export PYTHONPATH="<path_to_eoxserver_directory>"
python manage.py runserver


-------------------------
4. How to update fixtures
-------------------------

cd <path_to_eoxserver_directory>/autotest
export PYTHONPATH="<path_to_eoxserver_directory>"
python manage.py dumpdata --format=json --indent=4 > tmp.json
# Inspect file e.g. with: meld tmp.json data/fixtures/initial_data.json
mv tmp.json data/fixtures/<json-file>


-----------------------
5. How to run unittests
-----------------------

cd <path_to_eoxserver_directory>/autotest
export PYTHONPATH="<path_to_eoxserver_directory>"
export XML_CATALOG_FILES="<path_to_eoxserver_directory>/schemas/catalog.xml"

# services only
python manage.py test services

# for all modules
python manage.py test services coverages backends processes core

# or simply
python manage.py test
# this also runs some django tests.

--------------------------------------------------------------------------------
